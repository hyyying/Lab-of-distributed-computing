类似去哪网（机票）的分布式架构网站

1、至少三个角色的服务器：

 -主网站（android APP+server）人机界面的显示

 -机票供应商（多家航空公司），提供某种方式的服务调用接口，供主网站进行调用
   【起码两个，也可以设置成任意多个，比如dock可以同时启动3-5个，或一个服务器上多个端口】

 -支付服务提供商（多家），提供服务供主网站进行调用
   【至少一家】


2、功能方面的设计（建议可以考虑实现但不限于以下功能，但最小功能基本要求，可以完成一个浏览、下单、支付、出票的操作过程即可）

基于WEB或者移动终端，主页内容：可借鉴去哪，携程等网站的设计，输入出发地点、目的地，日期，提交后即可浏览各个航司当天的机票，包括剩余数量、价格、起飞时间、航班号等，可以查询、排序、多个时间段最低票价的搜索。
【某段时间最低票价走势、特定某个公司、某个机型等】
可以进行订单的处理（下订单、查询订单等），并完成支付（可简单模拟实现一个银行网关支付服务，例如设定一个账户余额数，进行扣款操作，如金额不足则扣款失败），支付成功后，订单生效，航司出票。

前端建议采用ajax异步的方式进行服务调用，增加用户体验效果

【查询-下订单-支付-支付成功返回购票结束】
【浏览并可查询：比如上海到北京6.10的机票 选择一个机票 下单 支付 出票】
【订单数据可包括：机票数量、机票单价、起飞地点、目的地点、时间、航空公司名称等】
【支付后航空公司才出票】
【设计一个协议达到一个安全的支付】
【若支付失败 仍为未支付状态】

3、至少包含以下一种分布式服务调用的设计

【】服务的方式：同步（RPC，SOAP或RestFul风格的WEBSERVICE等），异步（消息队列）

【】系统架构：云服务器，Dock微服务架构等

【】服务的治理：代理商和银行的服务如何注册、查找，服务的可用性如何保证（如服务提供者关机维护、网络掉线等）

系统性能：系统缓存、多服务器架构，分布式存储等，当访问者并发数量比较高，如何避免主网站变慢、查询时间长、宕机等情况出现

分布式存储方案：分布式数据库、NoSQL、缓存等

服务的有效性：如果保证7*24不间断的服务等

系统伸缩性：服务器架构动态扩展、热部署等